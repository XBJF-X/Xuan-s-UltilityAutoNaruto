<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="266" onload="init(evt)" viewBox="0 0 1200 266" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="266" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">F:\PyProject\DailyQuestsHelper\.venv/Scripts\py-spy.exe record -o profile.svg --pid 22360</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="255.00"> </text><svg id="frames" x="10" width="1180" total_samples="2818"><g><title>append_log (utils\core\Logger.py:144) (5 samples, 0.18%)</title><rect x="21.1498%" y="84" width="0.1774%" height="15" fill="rgb(227,0,7)" fg:x="596" fg:w="5"/><text x="21.3998%" y="94.50"></text></g><g><title>append_log (utils\core\Logger.py:146) (95 samples, 3.37%)</title><rect x="21.3982%" y="84" width="3.3712%" height="15" fill="rgb(217,0,24)" fg:x="603" fg:w="95"/><text x="21.6482%" y="94.50">app..</text></g><g><title>scan (utils\core\Scheduler.py:360) (4 samples, 0.14%)</title><rect x="24.8048%" y="84" width="0.1419%" height="15" fill="rgb(221,193,54)" fg:x="699" fg:w="4"/><text x="25.0548%" y="94.50"></text></g><g><title>&lt;module&gt; (DailyQuestsHelper.py:104) (704 samples, 24.98%)</title><rect x="0.0000%" y="68" width="24.9823%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="704"/><text x="0.2500%" y="78.50">&lt;module&gt; (DailyQuestsHelper.py:104)</text></g><g><title>_execute (utils\core\Task\GaoJiRenZheZhaoMu.py:11) (13 samples, 0.46%)</title><rect x="24.9823%" y="116" width="0.4613%" height="15" fill="rgb(208,68,35)" fg:x="704" fg:w="13"/><text x="25.2323%" y="126.50"></text></g><g><title>home (utils\core\Task\BaseTask.py:357) (13 samples, 0.46%)</title><rect x="24.9823%" y="132" width="0.4613%" height="15" fill="rgb(232,128,0)" fg:x="704" fg:w="13"/><text x="25.2323%" y="142.50"></text></g><g><title>detect (Detecter.py:23) (13 samples, 0.46%)</title><rect x="24.9823%" y="148" width="0.4613%" height="15" fill="rgb(207,160,47)" fg:x="704" fg:w="13"/><text x="25.2323%" y="158.50"></text></g><g><title>scene_match (Recognizer.py:58) (12 samples, 0.43%)</title><rect x="25.0177%" y="164" width="0.4258%" height="15" fill="rgb(228,23,34)" fg:x="705" fg:w="12"/><text x="25.2677%" y="174.50"></text></g><g><title>_execute (utils\core\Task\GaoJiRenZheZhaoMu.py:16) (11 samples, 0.39%)</title><rect x="25.4436%" y="116" width="0.3903%" height="15" fill="rgb(218,30,26)" fg:x="717" fg:w="11"/><text x="25.6936%" y="126.50"></text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (11 samples, 0.39%)</title><rect x="25.4436%" y="132" width="0.3903%" height="15" fill="rgb(220,122,19)" fg:x="717" fg:w="11"/><text x="25.6936%" y="142.50"></text></g><g><title>click (Clicker.py:26) (11 samples, 0.39%)</title><rect x="25.4436%" y="148" width="0.3903%" height="15" fill="rgb(250,228,42)" fg:x="717" fg:w="11"/><text x="25.6936%" y="158.50"></text></g><g><title>element_match (Recognizer.py:94) (11 samples, 0.39%)</title><rect x="25.4436%" y="164" width="0.3903%" height="15" fill="rgb(240,193,28)" fg:x="717" fg:w="11"/><text x="25.6936%" y="174.50"></text></g><g><title>template_match (Recognizer.py:165) (11 samples, 0.39%)</title><rect x="25.4436%" y="180" width="0.3903%" height="15" fill="rgb(216,20,37)" fg:x="717" fg:w="11"/><text x="25.6936%" y="190.50"></text></g><g><title>_execute (utils\core\Task\GaoJiRenZheZhaoMu.py:21) (130 samples, 4.61%)</title><rect x="25.8339%" y="116" width="4.6132%" height="15" fill="rgb(206,188,39)" fg:x="728" fg:w="130"/><text x="26.0839%" y="126.50">_exec..</text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (130 samples, 4.61%)</title><rect x="25.8339%" y="132" width="4.6132%" height="15" fill="rgb(217,207,13)" fg:x="728" fg:w="130"/><text x="26.0839%" y="142.50">detec..</text></g><g><title>detect (Detecter.py:23) (129 samples, 4.58%)</title><rect x="25.8694%" y="148" width="4.5777%" height="15" fill="rgb(231,73,38)" fg:x="729" fg:w="129"/><text x="26.1194%" y="158.50">detec..</text></g><g><title>scene_match (Recognizer.py:58) (127 samples, 4.51%)</title><rect x="25.9404%" y="164" width="4.5067%" height="15" fill="rgb(225,20,46)" fg:x="731" fg:w="127"/><text x="26.1904%" y="174.50">scene..</text></g><g><title>template_match (Recognizer.py:165) (186 samples, 6.60%)</title><rect x="30.5181%" y="180" width="6.6004%" height="15" fill="rgb(210,31,41)" fg:x="860" fg:w="186"/><text x="30.7681%" y="190.50">template_..</text></g><g><title>template_match (Recognizer.py:172) (6 samples, 0.21%)</title><rect x="37.1185%" y="180" width="0.2129%" height="15" fill="rgb(221,200,47)" fg:x="1046" fg:w="6"/><text x="37.3685%" y="190.50"></text></g><g><title>_execute (utils\core\Task\GaoJiRenZheZhaoMu.py:27) (196 samples, 6.96%)</title><rect x="30.4826%" y="116" width="6.9553%" height="15" fill="rgb(226,26,5)" fg:x="859" fg:w="196"/><text x="30.7326%" y="126.50">_execute ..</text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (196 samples, 6.96%)</title><rect x="30.4826%" y="132" width="6.9553%" height="15" fill="rgb(249,33,26)" fg:x="859" fg:w="196"/><text x="30.7326%" y="142.50">click_and..</text></g><g><title>click (Clicker.py:26) (195 samples, 6.92%)</title><rect x="30.5181%" y="148" width="6.9198%" height="15" fill="rgb(235,183,28)" fg:x="860" fg:w="195"/><text x="30.7681%" y="158.50">click (Cl..</text></g><g><title>element_match (Recognizer.py:94) (195 samples, 6.92%)</title><rect x="30.5181%" y="164" width="6.9198%" height="15" fill="rgb(221,5,38)" fg:x="860" fg:w="195"/><text x="30.7681%" y="174.50">element_m..</text></g><g><title>home (utils\core\Task\BaseTask.py:357) (42 samples, 1.49%)</title><rect x="37.4379%" y="132" width="1.4904%" height="15" fill="rgb(247,18,42)" fg:x="1055" fg:w="42"/><text x="37.6879%" y="142.50"></text></g><g><title>detect (Detecter.py:23) (41 samples, 1.45%)</title><rect x="37.4734%" y="148" width="1.4549%" height="15" fill="rgb(241,131,45)" fg:x="1056" fg:w="41"/><text x="37.7234%" y="158.50"></text></g><g><title>scene_match (Recognizer.py:58) (41 samples, 1.45%)</title><rect x="37.4734%" y="164" width="1.4549%" height="15" fill="rgb(249,31,29)" fg:x="1056" fg:w="41"/><text x="37.7234%" y="174.50"></text></g><g><title>click (Clicker.py:24) (3 samples, 0.11%)</title><rect x="38.9283%" y="180" width="0.1065%" height="15" fill="rgb(225,111,53)" fg:x="1097" fg:w="3"/><text x="39.1783%" y="190.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (3 samples, 0.11%)</title><rect x="38.9283%" y="196" width="0.1065%" height="15" fill="rgb(238,160,17)" fg:x="1097" fg:w="3"/><text x="39.1783%" y="206.50"></text></g><g><title>screencap (GetScreen.py:97) (3 samples, 0.11%)</title><rect x="38.9283%" y="212" width="0.1065%" height="15" fill="rgb(214,148,48)" fg:x="1097" fg:w="3"/><text x="39.1783%" y="222.50"></text></g><g><title>screencap (LD.py:220) (3 samples, 0.11%)</title><rect x="38.9283%" y="228" width="0.1065%" height="15" fill="rgb(232,36,49)" fg:x="1097" fg:w="3"/><text x="39.1783%" y="238.50"></text></g><g><title>_execute (utils\core\Task\GaoJiRenZheZhaoMu.py:47) (84 samples, 2.98%)</title><rect x="37.4379%" y="116" width="2.9808%" height="15" fill="rgb(209,103,24)" fg:x="1055" fg:w="84"/><text x="37.6879%" y="126.50">_ex..</text></g><g><title>home (utils\core\Task\BaseTask.py:363) (42 samples, 1.49%)</title><rect x="38.9283%" y="132" width="1.4904%" height="15" fill="rgb(229,88,8)" fg:x="1097" fg:w="42"/><text x="39.1783%" y="142.50"></text></g><g><title>esc (utils\core\Task\BaseTask.py:336) (42 samples, 1.49%)</title><rect x="38.9283%" y="148" width="1.4904%" height="15" fill="rgb(213,181,19)" fg:x="1097" fg:w="42"/><text x="39.1783%" y="158.50"></text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (42 samples, 1.49%)</title><rect x="38.9283%" y="164" width="1.4904%" height="15" fill="rgb(254,191,54)" fg:x="1097" fg:w="42"/><text x="39.1783%" y="174.50"></text></g><g><title>click (Clicker.py:26) (39 samples, 1.38%)</title><rect x="39.0348%" y="180" width="1.3840%" height="15" fill="rgb(241,83,37)" fg:x="1100" fg:w="39"/><text x="39.2848%" y="190.50"></text></g><g><title>element_match (Recognizer.py:94) (39 samples, 1.38%)</title><rect x="39.0348%" y="196" width="1.3840%" height="15" fill="rgb(233,36,39)" fg:x="1100" fg:w="39"/><text x="39.2848%" y="206.50"></text></g><g><title>template_match (Recognizer.py:165) (38 samples, 1.35%)</title><rect x="39.0703%" y="212" width="1.3485%" height="15" fill="rgb(226,3,54)" fg:x="1101" fg:w="38"/><text x="39.3203%" y="222.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:101) (55 samples, 1.95%)</title><rect x="40.4187%" y="116" width="1.9517%" height="15" fill="rgb(245,192,40)" fg:x="1139" fg:w="55"/><text x="40.6687%" y="126.50">_..</text></g><g><title>detect_and_search (utils\core\Task\BaseTask.py:284) (55 samples, 1.95%)</title><rect x="40.4187%" y="132" width="1.9517%" height="15" fill="rgb(238,167,29)" fg:x="1139" fg:w="55"/><text x="40.6687%" y="142.50">d..</text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (55 samples, 1.95%)</title><rect x="40.4187%" y="148" width="1.9517%" height="15" fill="rgb(232,182,51)" fg:x="1139" fg:w="55"/><text x="40.6687%" y="158.50">d..</text></g><g><title>detect (Detecter.py:27) (55 samples, 1.95%)</title><rect x="40.4187%" y="164" width="1.9517%" height="15" fill="rgb(231,60,39)" fg:x="1139" fg:w="55"/><text x="40.6687%" y="174.50">d..</text></g><g><title>element_match (Recognizer.py:94) (55 samples, 1.95%)</title><rect x="40.4187%" y="180" width="1.9517%" height="15" fill="rgb(208,69,12)" fg:x="1139" fg:w="55"/><text x="40.6687%" y="190.50">e..</text></g><g><title>template_match (Recognizer.py:165) (55 samples, 1.95%)</title><rect x="40.4187%" y="196" width="1.9517%" height="15" fill="rgb(235,93,37)" fg:x="1139" fg:w="55"/><text x="40.6687%" y="206.50">t..</text></g><g><title>click (Clicker.py:24) (3 samples, 0.11%)</title><rect x="42.4060%" y="148" width="0.1065%" height="15" fill="rgb(213,116,39)" fg:x="1195" fg:w="3"/><text x="42.6560%" y="158.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (3 samples, 0.11%)</title><rect x="42.4060%" y="164" width="0.1065%" height="15" fill="rgb(222,207,29)" fg:x="1195" fg:w="3"/><text x="42.6560%" y="174.50"></text></g><g><title>screencap (GetScreen.py:97) (3 samples, 0.11%)</title><rect x="42.4060%" y="180" width="0.1065%" height="15" fill="rgb(206,96,30)" fg:x="1195" fg:w="3"/><text x="42.6560%" y="190.50"></text></g><g><title>screencap (LD.py:220) (3 samples, 0.11%)</title><rect x="42.4060%" y="196" width="0.1065%" height="15" fill="rgb(218,138,4)" fg:x="1195" fg:w="3"/><text x="42.6560%" y="206.50"></text></g><g><title>template_match (Recognizer.py:165) (208 samples, 7.38%)</title><rect x="42.5124%" y="180" width="7.3811%" height="15" fill="rgb(250,191,14)" fg:x="1198" fg:w="208"/><text x="42.7624%" y="190.50">template_m..</text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:458) (4 samples, 0.14%)</title><rect x="49.8935%" y="196" width="0.1419%" height="15" fill="rgb(239,60,40)" fg:x="1406" fg:w="4"/><text x="50.1435%" y="206.50"></text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:476) (4 samples, 0.14%)</title><rect x="50.0355%" y="196" width="0.1419%" height="15" fill="rgb(206,27,48)" fg:x="1410" fg:w="4"/><text x="50.2855%" y="206.50"></text></g><g><title>isposinf (numpy\lib\_ufunclike_impl.py:131) (3 samples, 0.11%)</title><rect x="50.0710%" y="212" width="0.1065%" height="15" fill="rgb(225,35,8)" fg:x="1411" fg:w="3"/><text x="50.3210%" y="222.50"></text></g><g><title>template_match (Recognizer.py:172) (13 samples, 0.46%)</title><rect x="49.8935%" y="180" width="0.4613%" height="15" fill="rgb(250,213,24)" fg:x="1406" fg:w="13"/><text x="50.1435%" y="190.50"></text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:477) (5 samples, 0.18%)</title><rect x="50.1774%" y="196" width="0.1774%" height="15" fill="rgb(247,123,22)" fg:x="1414" fg:w="5"/><text x="50.4274%" y="206.50"></text></g><g><title>isneginf (numpy\lib\_ufunclike_impl.py:207) (3 samples, 0.11%)</title><rect x="50.2484%" y="212" width="0.1065%" height="15" fill="rgb(231,138,38)" fg:x="1416" fg:w="3"/><text x="50.4984%" y="222.50"></text></g><g><title>template_match (Recognizer.py:186) (7 samples, 0.25%)</title><rect x="50.3903%" y="180" width="0.2484%" height="15" fill="rgb(231,145,46)" fg:x="1420" fg:w="7"/><text x="50.6403%" y="190.50"></text></g><g><title>click (Clicker.py:26) (230 samples, 8.16%)</title><rect x="42.5124%" y="148" width="8.1618%" height="15" fill="rgb(251,118,11)" fg:x="1198" fg:w="230"/><text x="42.7624%" y="158.50">click (Clic..</text></g><g><title>element_match (Recognizer.py:94) (230 samples, 8.16%)</title><rect x="42.5124%" y="164" width="8.1618%" height="15" fill="rgb(217,147,25)" fg:x="1198" fg:w="230"/><text x="42.7624%" y="174.50">element_mat..</text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:110) (235 samples, 8.34%)</title><rect x="42.3705%" y="116" width="8.3392%" height="15" fill="rgb(247,81,37)" fg:x="1194" fg:w="235"/><text x="42.6205%" y="126.50">_execute (ut..</text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (235 samples, 8.34%)</title><rect x="42.3705%" y="132" width="8.3392%" height="15" fill="rgb(209,12,38)" fg:x="1194" fg:w="235"/><text x="42.6205%" y="142.50">click_and_wa..</text></g><g><title>click (Clicker.py:24) (3 samples, 0.11%)</title><rect x="50.7097%" y="164" width="0.1065%" height="15" fill="rgb(227,1,9)" fg:x="1429" fg:w="3"/><text x="50.9597%" y="174.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (3 samples, 0.11%)</title><rect x="50.7097%" y="180" width="0.1065%" height="15" fill="rgb(248,47,43)" fg:x="1429" fg:w="3"/><text x="50.9597%" y="190.50"></text></g><g><title>screencap (GetScreen.py:97) (3 samples, 0.11%)</title><rect x="50.7097%" y="196" width="0.1065%" height="15" fill="rgb(221,10,30)" fg:x="1429" fg:w="3"/><text x="50.9597%" y="206.50"></text></g><g><title>screencap (LD.py:220) (3 samples, 0.11%)</title><rect x="50.7097%" y="212" width="0.1065%" height="15" fill="rgb(210,229,1)" fg:x="1429" fg:w="3"/><text x="50.9597%" y="222.50"></text></g><g><title>template_match (Recognizer.py:165) (181 samples, 6.42%)</title><rect x="50.8517%" y="196" width="6.4230%" height="15" fill="rgb(222,148,37)" fg:x="1433" fg:w="181"/><text x="51.1017%" y="206.50">template..</text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:458) (4 samples, 0.14%)</title><rect x="57.2747%" y="212" width="0.1419%" height="15" fill="rgb(234,67,33)" fg:x="1614" fg:w="4"/><text x="57.5247%" y="222.50"></text></g><g><title>template_match (Recognizer.py:172) (9 samples, 0.32%)</title><rect x="57.2747%" y="196" width="0.3194%" height="15" fill="rgb(247,98,35)" fg:x="1614" fg:w="9"/><text x="57.5247%" y="206.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:114) (195 samples, 6.92%)</title><rect x="50.7097%" y="116" width="6.9198%" height="15" fill="rgb(247,138,52)" fg:x="1429" fg:w="195"/><text x="50.9597%" y="126.50">_execute ..</text></g><g><title>click_and_search (utils\core\Task\BaseTask.py:250) (195 samples, 6.92%)</title><rect x="50.7097%" y="132" width="6.9198%" height="15" fill="rgb(213,79,30)" fg:x="1429" fg:w="195"/><text x="50.9597%" y="142.50">click_and..</text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (195 samples, 6.92%)</title><rect x="50.7097%" y="148" width="6.9198%" height="15" fill="rgb(246,177,23)" fg:x="1429" fg:w="195"/><text x="50.9597%" y="158.50">click_and..</text></g><g><title>click (Clicker.py:26) (192 samples, 6.81%)</title><rect x="50.8162%" y="164" width="6.8133%" height="15" fill="rgb(230,62,27)" fg:x="1432" fg:w="192"/><text x="51.0662%" y="174.50">click (Cl..</text></g><g><title>element_match (Recognizer.py:94) (192 samples, 6.81%)</title><rect x="50.8162%" y="180" width="6.8133%" height="15" fill="rgb(216,154,8)" fg:x="1432" fg:w="192"/><text x="51.0662%" y="190.50">element_m..</text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:12) (15 samples, 0.53%)</title><rect x="57.6295%" y="116" width="0.5323%" height="15" fill="rgb(244,35,45)" fg:x="1624" fg:w="15"/><text x="57.8795%" y="126.50"></text></g><g><title>home (utils\core\Task\BaseTask.py:357) (15 samples, 0.53%)</title><rect x="57.6295%" y="132" width="0.5323%" height="15" fill="rgb(251,115,12)" fg:x="1624" fg:w="15"/><text x="57.8795%" y="142.50"></text></g><g><title>detect (Detecter.py:23) (15 samples, 0.53%)</title><rect x="57.6295%" y="148" width="0.5323%" height="15" fill="rgb(240,54,50)" fg:x="1624" fg:w="15"/><text x="57.8795%" y="158.50"></text></g><g><title>scene_match (Recognizer.py:58) (15 samples, 0.53%)</title><rect x="57.6295%" y="164" width="0.5323%" height="15" fill="rgb(233,84,52)" fg:x="1624" fg:w="15"/><text x="57.8795%" y="174.50"></text></g><g><title>click (Clicker.py:24) (3 samples, 0.11%)</title><rect x="58.1618%" y="148" width="0.1065%" height="15" fill="rgb(207,117,47)" fg:x="1639" fg:w="3"/><text x="58.4118%" y="158.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (3 samples, 0.11%)</title><rect x="58.1618%" y="164" width="0.1065%" height="15" fill="rgb(249,43,39)" fg:x="1639" fg:w="3"/><text x="58.4118%" y="174.50"></text></g><g><title>screencap (GetScreen.py:97) (3 samples, 0.11%)</title><rect x="58.1618%" y="180" width="0.1065%" height="15" fill="rgb(209,38,44)" fg:x="1639" fg:w="3"/><text x="58.4118%" y="190.50"></text></g><g><title>screencap (LD.py:220) (3 samples, 0.11%)</title><rect x="58.1618%" y="196" width="0.1065%" height="15" fill="rgb(236,212,23)" fg:x="1639" fg:w="3"/><text x="58.4118%" y="206.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:124) (54 samples, 1.92%)</title><rect x="58.1618%" y="116" width="1.9163%" height="15" fill="rgb(242,79,21)" fg:x="1639" fg:w="54"/><text x="58.4118%" y="126.50">_..</text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (54 samples, 1.92%)</title><rect x="58.1618%" y="132" width="1.9163%" height="15" fill="rgb(211,96,35)" fg:x="1639" fg:w="54"/><text x="58.4118%" y="142.50">c..</text></g><g><title>click (Clicker.py:26) (51 samples, 1.81%)</title><rect x="58.2683%" y="148" width="1.8098%" height="15" fill="rgb(253,215,40)" fg:x="1642" fg:w="51"/><text x="58.5183%" y="158.50">c..</text></g><g><title>element_match (Recognizer.py:94) (51 samples, 1.81%)</title><rect x="58.2683%" y="164" width="1.8098%" height="15" fill="rgb(211,81,21)" fg:x="1642" fg:w="51"/><text x="58.5183%" y="174.50">e..</text></g><g><title>template_match (Recognizer.py:165) (51 samples, 1.81%)</title><rect x="58.2683%" y="180" width="1.8098%" height="15" fill="rgb(208,190,38)" fg:x="1642" fg:w="51"/><text x="58.5183%" y="190.50">t..</text></g><g><title>detect (Detecter.py:20) (4 samples, 0.14%)</title><rect x="60.1845%" y="164" width="0.1419%" height="15" fill="rgb(235,213,38)" fg:x="1696" fg:w="4"/><text x="60.4345%" y="174.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (4 samples, 0.14%)</title><rect x="60.1845%" y="180" width="0.1419%" height="15" fill="rgb(237,122,38)" fg:x="1696" fg:w="4"/><text x="60.4345%" y="190.50"></text></g><g><title>screencap (GetScreen.py:97) (4 samples, 0.14%)</title><rect x="60.1845%" y="196" width="0.1419%" height="15" fill="rgb(244,218,35)" fg:x="1696" fg:w="4"/><text x="60.4345%" y="206.50"></text></g><g><title>screencap (LD.py:220) (3 samples, 0.11%)</title><rect x="60.2200%" y="212" width="0.1065%" height="15" fill="rgb(240,68,47)" fg:x="1697" fg:w="3"/><text x="60.4700%" y="222.50"></text></g><g><title>template_match (Recognizer.py:165) (227 samples, 8.06%)</title><rect x="60.3265%" y="196" width="8.0554%" height="15" fill="rgb(210,16,53)" fg:x="1700" fg:w="227"/><text x="60.5765%" y="206.50">template_ma..</text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:476) (8 samples, 0.28%)</title><rect x="68.4883%" y="212" width="0.2839%" height="15" fill="rgb(235,124,12)" fg:x="1930" fg:w="8"/><text x="68.7383%" y="222.50"></text></g><g><title>isposinf (numpy\lib\_ufunclike_impl.py:131) (7 samples, 0.25%)</title><rect x="68.5238%" y="228" width="0.2484%" height="15" fill="rgb(224,169,11)" fg:x="1931" fg:w="7"/><text x="68.7738%" y="238.50"></text></g><g><title>template_match (Recognizer.py:172) (16 samples, 0.57%)</title><rect x="68.3818%" y="196" width="0.5678%" height="15" fill="rgb(250,166,2)" fg:x="1927" fg:w="16"/><text x="68.6318%" y="206.50"></text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:477) (5 samples, 0.18%)</title><rect x="68.7722%" y="212" width="0.1774%" height="15" fill="rgb(242,216,29)" fg:x="1938" fg:w="5"/><text x="69.0222%" y="222.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:130) (255 samples, 9.05%)</title><rect x="60.0781%" y="116" width="9.0490%" height="15" fill="rgb(230,116,27)" fg:x="1693" fg:w="255"/><text x="60.3281%" y="126.50">_execute (uti..</text></g><g><title>detect_and_search (utils\core\Task\BaseTask.py:284) (254 samples, 9.01%)</title><rect x="60.1136%" y="132" width="9.0135%" height="15" fill="rgb(228,99,48)" fg:x="1694" fg:w="254"/><text x="60.3636%" y="142.50">detect_and_se..</text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (254 samples, 9.01%)</title><rect x="60.1136%" y="148" width="9.0135%" height="15" fill="rgb(253,11,6)" fg:x="1694" fg:w="254"/><text x="60.3636%" y="158.50">detect_and_wa..</text></g><g><title>detect (Detecter.py:27) (248 samples, 8.80%)</title><rect x="60.3265%" y="164" width="8.8006%" height="15" fill="rgb(247,143,39)" fg:x="1700" fg:w="248"/><text x="60.5765%" y="174.50">detect (Dete..</text></g><g><title>element_match (Recognizer.py:94) (248 samples, 8.80%)</title><rect x="60.3265%" y="180" width="8.8006%" height="15" fill="rgb(236,97,10)" fg:x="1700" fg:w="248"/><text x="60.5765%" y="190.50">element_matc..</text></g><g><title>template_match (Recognizer.py:186) (5 samples, 0.18%)</title><rect x="68.9496%" y="196" width="0.1774%" height="15" fill="rgb(233,208,19)" fg:x="1943" fg:w="5"/><text x="69.1996%" y="206.50"></text></g><g><title>click (Clicker.py:24) (5 samples, 0.18%)</title><rect x="69.1980%" y="148" width="0.1774%" height="15" fill="rgb(216,164,2)" fg:x="1950" fg:w="5"/><text x="69.4480%" y="158.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (5 samples, 0.18%)</title><rect x="69.1980%" y="164" width="0.1774%" height="15" fill="rgb(220,129,5)" fg:x="1950" fg:w="5"/><text x="69.4480%" y="174.50"></text></g><g><title>screencap (GetScreen.py:97) (5 samples, 0.18%)</title><rect x="69.1980%" y="180" width="0.1774%" height="15" fill="rgb(242,17,10)" fg:x="1950" fg:w="5"/><text x="69.4480%" y="190.50"></text></g><g><title>screencap (LD.py:220) (4 samples, 0.14%)</title><rect x="69.2335%" y="196" width="0.1419%" height="15" fill="rgb(242,107,0)" fg:x="1951" fg:w="4"/><text x="69.4835%" y="206.50"></text></g><g><title>template_match (Recognizer.py:165) (180 samples, 6.39%)</title><rect x="69.4109%" y="180" width="6.3875%" height="15" fill="rgb(251,28,31)" fg:x="1956" fg:w="180"/><text x="69.6609%" y="190.50">template..</text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:458) (3 samples, 0.11%)</title><rect x="75.7984%" y="196" width="0.1065%" height="15" fill="rgb(233,223,10)" fg:x="2136" fg:w="3"/><text x="76.0484%" y="206.50"></text></g><g><title>template_match (Recognizer.py:172) (6 samples, 0.21%)</title><rect x="75.7984%" y="180" width="0.2129%" height="15" fill="rgb(215,21,27)" fg:x="2136" fg:w="6"/><text x="76.0484%" y="190.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:143) (202 samples, 7.17%)</title><rect x="69.1270%" y="116" width="7.1682%" height="15" fill="rgb(232,23,21)" fg:x="1948" fg:w="202"/><text x="69.3770%" y="126.50">_execute (..</text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (202 samples, 7.17%)</title><rect x="69.1270%" y="132" width="7.1682%" height="15" fill="rgb(244,5,23)" fg:x="1948" fg:w="202"/><text x="69.3770%" y="142.50">click_and_..</text></g><g><title>click (Clicker.py:26) (195 samples, 6.92%)</title><rect x="69.3754%" y="148" width="6.9198%" height="15" fill="rgb(226,81,46)" fg:x="1955" fg:w="195"/><text x="69.6254%" y="158.50">click (Cl..</text></g><g><title>element_match (Recognizer.py:94) (195 samples, 6.92%)</title><rect x="69.3754%" y="164" width="6.9198%" height="15" fill="rgb(247,70,30)" fg:x="1955" fg:w="195"/><text x="69.6254%" y="174.50">element_m..</text></g><g><title>template_match (Recognizer.py:186) (7 samples, 0.25%)</title><rect x="76.0468%" y="180" width="0.2484%" height="15" fill="rgb(212,68,19)" fg:x="2143" fg:w="7"/><text x="76.2968%" y="190.50"></text></g><g><title>home (utils\core\Task\BaseTask.py:357) (25 samples, 0.89%)</title><rect x="76.2952%" y="132" width="0.8872%" height="15" fill="rgb(240,187,13)" fg:x="2150" fg:w="25"/><text x="76.5452%" y="142.50"></text></g><g><title>detect (Detecter.py:23) (25 samples, 0.89%)</title><rect x="76.2952%" y="148" width="0.8872%" height="15" fill="rgb(223,113,26)" fg:x="2150" fg:w="25"/><text x="76.5452%" y="158.50"></text></g><g><title>scene_match (Recognizer.py:58) (25 samples, 0.89%)</title><rect x="76.2952%" y="164" width="0.8872%" height="15" fill="rgb(206,192,2)" fg:x="2150" fg:w="25"/><text x="76.5452%" y="174.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:158) (28 samples, 0.99%)</title><rect x="76.2952%" y="116" width="0.9936%" height="15" fill="rgb(241,108,4)" fg:x="2150" fg:w="28"/><text x="76.5452%" y="126.50"></text></g><g><title>home (utils\core\Task\BaseTask.py:363) (3 samples, 0.11%)</title><rect x="77.1824%" y="132" width="0.1065%" height="15" fill="rgb(247,173,49)" fg:x="2175" fg:w="3"/><text x="77.4324%" y="142.50"></text></g><g><title>esc (utils\core\Task\BaseTask.py:336) (3 samples, 0.11%)</title><rect x="77.1824%" y="148" width="0.1065%" height="15" fill="rgb(224,114,35)" fg:x="2175" fg:w="3"/><text x="77.4324%" y="158.50"></text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (3 samples, 0.11%)</title><rect x="77.1824%" y="164" width="0.1065%" height="15" fill="rgb(245,159,27)" fg:x="2175" fg:w="3"/><text x="77.4324%" y="174.50"></text></g><g><title>click (Clicker.py:26) (3 samples, 0.11%)</title><rect x="77.1824%" y="180" width="0.1065%" height="15" fill="rgb(245,172,44)" fg:x="2175" fg:w="3"/><text x="77.4324%" y="190.50"></text></g><g><title>element_match (Recognizer.py:94) (3 samples, 0.11%)</title><rect x="77.1824%" y="196" width="0.1065%" height="15" fill="rgb(236,23,11)" fg:x="2175" fg:w="3"/><text x="77.4324%" y="206.50"></text></g><g><title>template_match (Recognizer.py:165) (3 samples, 0.11%)</title><rect x="77.1824%" y="212" width="0.1065%" height="15" fill="rgb(205,117,38)" fg:x="2175" fg:w="3"/><text x="77.4324%" y="222.50"></text></g><g><title>template_match (Recognizer.py:165) (15 samples, 0.53%)</title><rect x="77.3243%" y="180" width="0.5323%" height="15" fill="rgb(237,72,25)" fg:x="2179" fg:w="15"/><text x="77.5743%" y="190.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:16) (17 samples, 0.60%)</title><rect x="77.2889%" y="116" width="0.6033%" height="15" fill="rgb(244,70,9)" fg:x="2178" fg:w="17"/><text x="77.5389%" y="126.50"></text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (17 samples, 0.60%)</title><rect x="77.2889%" y="132" width="0.6033%" height="15" fill="rgb(217,125,39)" fg:x="2178" fg:w="17"/><text x="77.5389%" y="142.50"></text></g><g><title>click (Clicker.py:26) (16 samples, 0.57%)</title><rect x="77.3243%" y="148" width="0.5678%" height="15" fill="rgb(235,36,10)" fg:x="2179" fg:w="16"/><text x="77.5743%" y="158.50"></text></g><g><title>element_match (Recognizer.py:94) (16 samples, 0.57%)</title><rect x="77.3243%" y="164" width="0.5678%" height="15" fill="rgb(251,123,47)" fg:x="2179" fg:w="16"/><text x="77.5743%" y="174.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:21) (33 samples, 1.17%)</title><rect x="77.8921%" y="116" width="1.1710%" height="15" fill="rgb(221,13,13)" fg:x="2195" fg:w="33"/><text x="78.1421%" y="126.50"></text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (33 samples, 1.17%)</title><rect x="77.8921%" y="132" width="1.1710%" height="15" fill="rgb(238,131,9)" fg:x="2195" fg:w="33"/><text x="78.1421%" y="142.50"></text></g><g><title>detect (Detecter.py:23) (33 samples, 1.17%)</title><rect x="77.8921%" y="148" width="1.1710%" height="15" fill="rgb(211,50,8)" fg:x="2195" fg:w="33"/><text x="78.1421%" y="158.50"></text></g><g><title>scene_match (Recognizer.py:58) (33 samples, 1.17%)</title><rect x="77.8921%" y="164" width="1.1710%" height="15" fill="rgb(245,182,24)" fg:x="2195" fg:w="33"/><text x="78.1421%" y="174.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:27) (18 samples, 0.64%)</title><rect x="79.0632%" y="116" width="0.6388%" height="15" fill="rgb(242,14,37)" fg:x="2228" fg:w="18"/><text x="79.3132%" y="126.50"></text></g><g><title>click_and_search (utils\core\Task\BaseTask.py:250) (17 samples, 0.60%)</title><rect x="79.0987%" y="132" width="0.6033%" height="15" fill="rgb(246,228,12)" fg:x="2229" fg:w="17"/><text x="79.3487%" y="142.50"></text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (17 samples, 0.60%)</title><rect x="79.0987%" y="148" width="0.6033%" height="15" fill="rgb(213,55,15)" fg:x="2229" fg:w="17"/><text x="79.3487%" y="158.50"></text></g><g><title>click (Clicker.py:26) (17 samples, 0.60%)</title><rect x="79.0987%" y="164" width="0.6033%" height="15" fill="rgb(209,9,3)" fg:x="2229" fg:w="17"/><text x="79.3487%" y="174.50"></text></g><g><title>element_match (Recognizer.py:94) (17 samples, 0.60%)</title><rect x="79.0987%" y="180" width="0.6033%" height="15" fill="rgb(230,59,30)" fg:x="2229" fg:w="17"/><text x="79.3487%" y="190.50"></text></g><g><title>template_match (Recognizer.py:165) (17 samples, 0.60%)</title><rect x="79.0987%" y="196" width="0.6033%" height="15" fill="rgb(209,121,21)" fg:x="2229" fg:w="17"/><text x="79.3487%" y="206.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:45) (94 samples, 3.34%)</title><rect x="79.7019%" y="116" width="3.3357%" height="15" fill="rgb(220,109,13)" fg:x="2246" fg:w="94"/><text x="79.9519%" y="126.50">_ex..</text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (94 samples, 3.34%)</title><rect x="79.7019%" y="132" width="3.3357%" height="15" fill="rgb(232,18,1)" fg:x="2246" fg:w="94"/><text x="79.9519%" y="142.50">det..</text></g><g><title>detect (Detecter.py:23) (93 samples, 3.30%)</title><rect x="79.7374%" y="148" width="3.3002%" height="15" fill="rgb(215,41,42)" fg:x="2247" fg:w="93"/><text x="79.9874%" y="158.50">det..</text></g><g><title>scene_match (Recognizer.py:58) (93 samples, 3.30%)</title><rect x="79.7374%" y="164" width="3.3002%" height="15" fill="rgb(224,123,36)" fg:x="2247" fg:w="93"/><text x="79.9874%" y="174.50">sce..</text></g><g><title>template_match (Recognizer.py:165) (9 samples, 0.32%)</title><rect x="83.0376%" y="180" width="0.3194%" height="15" fill="rgb(240,125,3)" fg:x="2340" fg:w="9"/><text x="83.2876%" y="190.50"></text></g><g><title>click (Clicker.py:26) (11 samples, 0.39%)</title><rect x="83.0376%" y="148" width="0.3903%" height="15" fill="rgb(205,98,50)" fg:x="2340" fg:w="11"/><text x="83.2876%" y="158.50"></text></g><g><title>element_match (Recognizer.py:94) (11 samples, 0.39%)</title><rect x="83.0376%" y="164" width="0.3903%" height="15" fill="rgb(205,185,37)" fg:x="2340" fg:w="11"/><text x="83.2876%" y="174.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:51) (12 samples, 0.43%)</title><rect x="83.0376%" y="116" width="0.4258%" height="15" fill="rgb(238,207,15)" fg:x="2340" fg:w="12"/><text x="83.2876%" y="126.50"></text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (12 samples, 0.43%)</title><rect x="83.0376%" y="132" width="0.4258%" height="15" fill="rgb(213,199,42)" fg:x="2340" fg:w="12"/><text x="83.2876%" y="142.50"></text></g><g><title>detect (Detecter.py:20) (5 samples, 0.18%)</title><rect x="83.4634%" y="148" width="0.1774%" height="15" fill="rgb(235,201,11)" fg:x="2352" fg:w="5"/><text x="83.7134%" y="158.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (5 samples, 0.18%)</title><rect x="83.4634%" y="164" width="0.1774%" height="15" fill="rgb(207,46,11)" fg:x="2352" fg:w="5"/><text x="83.7134%" y="174.50"></text></g><g><title>screencap (GetScreen.py:97) (5 samples, 0.18%)</title><rect x="83.4634%" y="180" width="0.1774%" height="15" fill="rgb(241,35,35)" fg:x="2352" fg:w="5"/><text x="83.7134%" y="190.50"></text></g><g><title>screencap (LD.py:220) (4 samples, 0.14%)</title><rect x="83.4989%" y="196" width="0.1419%" height="15" fill="rgb(243,32,47)" fg:x="2353" fg:w="4"/><text x="83.7489%" y="206.50"></text></g><g><title>template_match (Recognizer.py:165) (204 samples, 7.24%)</title><rect x="83.7473%" y="180" width="7.2392%" height="15" fill="rgb(247,202,23)" fg:x="2360" fg:w="204"/><text x="83.9973%" y="190.50">template_m..</text></g><g><title>template_match (Recognizer.py:172) (4 samples, 0.14%)</title><rect x="90.9865%" y="180" width="0.1419%" height="15" fill="rgb(219,102,11)" fg:x="2564" fg:w="4"/><text x="91.2365%" y="190.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:59) (223 samples, 7.91%)</title><rect x="83.4634%" y="116" width="7.9134%" height="15" fill="rgb(243,110,44)" fg:x="2352" fg:w="223"/><text x="83.7134%" y="126.50">_execute (u..</text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (223 samples, 7.91%)</title><rect x="83.4634%" y="132" width="7.9134%" height="15" fill="rgb(222,74,54)" fg:x="2352" fg:w="223"/><text x="83.7134%" y="142.50">detect_and_..</text></g><g><title>detect (Detecter.py:27) (218 samples, 7.74%)</title><rect x="83.6409%" y="148" width="7.7360%" height="15" fill="rgb(216,99,12)" fg:x="2357" fg:w="218"/><text x="83.8909%" y="158.50">detect (Det..</text></g><g><title>element_match (Recognizer.py:94) (218 samples, 7.74%)</title><rect x="83.6409%" y="164" width="7.7360%" height="15" fill="rgb(226,22,26)" fg:x="2357" fg:w="218"/><text x="83.8909%" y="174.50">element_mat..</text></g><g><title>template_match (Recognizer.py:186) (7 samples, 0.25%)</title><rect x="91.1285%" y="180" width="0.2484%" height="15" fill="rgb(217,163,10)" fg:x="2568" fg:w="7"/><text x="91.3785%" y="190.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:72) (20 samples, 0.71%)</title><rect x="91.3769%" y="116" width="0.7097%" height="15" fill="rgb(213,25,53)" fg:x="2575" fg:w="20"/><text x="91.6269%" y="126.50"></text></g><g><title>click_and_wait (utils\core\Task\BaseTask.py:129) (20 samples, 0.71%)</title><rect x="91.3769%" y="132" width="0.7097%" height="15" fill="rgb(252,105,26)" fg:x="2575" fg:w="20"/><text x="91.6269%" y="142.50"></text></g><g><title>click (Clicker.py:26) (20 samples, 0.71%)</title><rect x="91.3769%" y="148" width="0.7097%" height="15" fill="rgb(220,39,43)" fg:x="2575" fg:w="20"/><text x="91.6269%" y="158.50"></text></g><g><title>element_match (Recognizer.py:94) (20 samples, 0.71%)</title><rect x="91.3769%" y="164" width="0.7097%" height="15" fill="rgb(229,68,48)" fg:x="2575" fg:w="20"/><text x="91.6269%" y="174.50"></text></g><g><title>template_match (Recognizer.py:165) (20 samples, 0.71%)</title><rect x="91.3769%" y="180" width="0.7097%" height="15" fill="rgb(252,8,32)" fg:x="2575" fg:w="20"/><text x="91.6269%" y="190.50"></text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:77) (17 samples, 0.60%)</title><rect x="92.0866%" y="116" width="0.6033%" height="15" fill="rgb(223,20,43)" fg:x="2595" fg:w="17"/><text x="92.3366%" y="126.50"></text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (17 samples, 0.60%)</title><rect x="92.0866%" y="132" width="0.6033%" height="15" fill="rgb(229,81,49)" fg:x="2595" fg:w="17"/><text x="92.3366%" y="142.50"></text></g><g><title>detect (Detecter.py:27) (15 samples, 0.53%)</title><rect x="92.1576%" y="148" width="0.5323%" height="15" fill="rgb(236,28,36)" fg:x="2597" fg:w="15"/><text x="92.4076%" y="158.50"></text></g><g><title>element_match (Recognizer.py:94) (15 samples, 0.53%)</title><rect x="92.1576%" y="164" width="0.5323%" height="15" fill="rgb(249,185,26)" fg:x="2597" fg:w="15"/><text x="92.4076%" y="174.50"></text></g><g><title>template_match (Recognizer.py:165) (15 samples, 0.53%)</title><rect x="92.1576%" y="180" width="0.5323%" height="15" fill="rgb(249,174,33)" fg:x="2597" fg:w="15"/><text x="92.4076%" y="190.50"></text></g><g><title>detect (Detecter.py:20) (4 samples, 0.14%)</title><rect x="92.7608%" y="148" width="0.1419%" height="15" fill="rgb(233,201,37)" fg:x="2614" fg:w="4"/><text x="93.0108%" y="158.50"></text></g><g><title>screen_cap (utils\core\Controller.py:30) (4 samples, 0.14%)</title><rect x="92.7608%" y="164" width="0.1419%" height="15" fill="rgb(221,78,26)" fg:x="2614" fg:w="4"/><text x="93.0108%" y="174.50"></text></g><g><title>screencap (GetScreen.py:97) (4 samples, 0.14%)</title><rect x="92.7608%" y="180" width="0.1419%" height="15" fill="rgb(250,127,30)" fg:x="2614" fg:w="4"/><text x="93.0108%" y="190.50"></text></g><g><title>screencap (LD.py:220) (4 samples, 0.14%)</title><rect x="92.7608%" y="196" width="0.1419%" height="15" fill="rgb(230,49,44)" fg:x="2614" fg:w="4"/><text x="93.0108%" y="206.50"></text></g><g><title>template_match (Recognizer.py:165) (186 samples, 6.60%)</title><rect x="92.9383%" y="180" width="6.6004%" height="15" fill="rgb(229,67,23)" fg:x="2619" fg:w="186"/><text x="93.1883%" y="190.50">template_..</text></g><g><title>template_match (Recognizer.py:172) (7 samples, 0.25%)</title><rect x="99.5387%" y="180" width="0.2484%" height="15" fill="rgb(249,83,47)" fg:x="2805" fg:w="7"/><text x="99.7887%" y="190.50"></text></g><g><title>nan_to_num (numpy\lib\_type_check_impl.py:458) (6 samples, 0.21%)</title><rect x="99.5742%" y="196" width="0.2129%" height="15" fill="rgb(215,43,3)" fg:x="2806" fg:w="6"/><text x="99.8242%" y="206.50"></text></g><g><title>all (2,818 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(238,154,13)" fg:x="0" fg:w="2818"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:1032) (2,114 samples, 75.02%)</title><rect x="24.9823%" y="68" width="75.0177%" height="15" fill="rgb(219,56,2)" fg:x="704" fg:w="2114"/><text x="25.2323%" y="78.50">_bootstrap (threading.py:1032)</text></g><g><title>_bootstrap_inner (threading.py:1075) (2,114 samples, 75.02%)</title><rect x="24.9823%" y="84" width="75.0177%" height="15" fill="rgb(233,0,4)" fg:x="704" fg:w="2114"/><text x="25.2323%" y="94.50">_bootstrap_inner (threading.py:1075)</text></g><g><title>run (threading.py:1012) (2,114 samples, 75.02%)</title><rect x="24.9823%" y="100" width="75.0177%" height="15" fill="rgb(235,30,7)" fg:x="704" fg:w="2114"/><text x="25.2323%" y="110.50">run (threading.py:1012)</text></g><g><title>_execute (utils\core\Task\RenWuJiHuiSuo.py:92) (205 samples, 7.27%)</title><rect x="92.7253%" y="116" width="7.2747%" height="15" fill="rgb(250,79,13)" fg:x="2613" fg:w="205"/><text x="92.9753%" y="126.50">_execute (..</text></g><g><title>detect_and_wait (utils\core\Task\BaseTask.py:118) (205 samples, 7.27%)</title><rect x="92.7253%" y="132" width="7.2747%" height="15" fill="rgb(211,146,34)" fg:x="2613" fg:w="205"/><text x="92.9753%" y="142.50">detect_and..</text></g><g><title>detect (Detecter.py:27) (200 samples, 7.10%)</title><rect x="92.9028%" y="148" width="7.0972%" height="15" fill="rgb(228,22,38)" fg:x="2618" fg:w="200"/><text x="93.1528%" y="158.50">detect (De..</text></g><g><title>element_match (Recognizer.py:94) (200 samples, 7.10%)</title><rect x="92.9028%" y="164" width="7.0972%" height="15" fill="rgb(235,168,5)" fg:x="2618" fg:w="200"/><text x="93.1528%" y="174.50">element_ma..</text></g><g><title>template_match (Recognizer.py:186) (5 samples, 0.18%)</title><rect x="99.8226%" y="180" width="0.1774%" height="15" fill="rgb(221,155,16)" fg:x="2813" fg:w="5"/><text x="100.0726%" y="190.50"></text></g></svg></svg>